{"version":3,"file":"static/js/28.3d825df9.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/Svg/BackSvg/BackSvg.styled.jsx","components/Svg/BackSvg/BackSvg.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieList/MovieList.jsx","components/HomeComponents/PopularMovies/PopularMovies.styled.jsx","components/HomeComponents/PopularMovies/PopularMovies.jsx","components/HomeComponents/RecentlyViewed/RecentlyViewed.styled.jsx","components/HomeComponents/RecentlyViewed/RecentlyViewed.jsx","components/Svg/MoreSvg/MoreSvg.styled.jsx","components/Svg/MoreSvg/MoreSvg.jsx","components/HomeComponents/UpcomingMovies/UpcomingMovies.styled.jsx","components/HomeComponents/UpcomingMovies/UpcomingMovies.jsx","components/Svg/ComeSvg/ComeSvg.styled.jsx","components/Svg/ComeSvg/ComeSvg.jsx","components/HomeComponents/NowTranding/NowTranding.styled.jsx","components/HomeComponents/NowTranding/NowTranding.jsx","components/pages/Home/Home.styled.jsx","components/pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n`; \n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 50px;\n  row-gap: 30px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  > a {\n      display:block;\n      text-decoration: none;\n      color: #fff;\n    ;\n`;\n\nexport const Img = styled.img`\n  width: 270px;\n  height: 405px;\n  border-radius: 30px;\n  margin-bottom: 10px;\n`;\n\nexport const NameWrap = styled.span`\n  width: 270px;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`;\n\nexport const MovieTitle = styled.span`\n  font-weight: 600;\n  font-size: 16px;\n`;\n\nexport const MovieYear = styled.span`\n  font-size: 14px;\n  opacity: 0.4;\n`;\n\n\n// export const List = styled.ul`\n// list-style: none;\n// display: flex;\n// flex-wrap: wrap;\n// gap:15px;\n// row-gap: 40px;\n// justify-content: center;\n// > li{\n//   width: 270px;\n\n//   >img{\n//     border-radius: 1px;\n//     width: 270px;\n//     height: 405px;\n//     margin-bottom: 20px;\n//     box-shadow: 1px 3px 6px 0px rgba(0,0,0,0.7);\n//     transition: box-shadow 0.3s ease;\n//   }\n//   > img:hover {\n//     box-shadow: 1px 2px 10px 0px #FFA500;\n// }\n//   >p {\n//     margin: 0;\n//   }\n//   }\n// `;","import styled from \"styled-components\";\n\n// export const SvgBox = styled.div`\n//     display: block;\n//     // align-items: center;\n//     // justify-content: center;\n// `;\nexport const Svg = styled.svg`\n`;","import { Svg } from './BackSvg.styled';\n\n\nexport const BackSvg = () => {\n    return (\n      // <SvgBox>\n<Svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n<title>back</title>\n<path d=\"M11.707 16.293l-4.293-4.293 4.293-4.293c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0l-5 5c-0.391 0.391-0.391 1.024 0 1.414l5 5c0.391 0.391 1.024 0.391 1.414 0s0.391-1.024 0-1.414zM18.707 16.293l-4.293-4.293 4.293-4.293c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0l-5 5c-0.391 0.391-0.391 1.024 0 1.414l5 5c0.391 0.391 1.024 0.391 1.414 0s0.391-1.024 0-1.414z\"></path>\n</Svg>\n\n      // </SvgBox>\n    );\n  }\n  export default BackSvg;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n    display: flex;\n    width:110px;\n    font-size: 15px;\n    justify-content: flex-end;\n    flex-direction: row-reverse;\n    align-items: center;\n    margin-bottom: 15px;  \n    color: rgba(0, 0, 0, 0.5);\n    text-decoration: none;\n    text-transform: uppercase;\n    transition: color 0.4s ease ;\n\n    svg {\n        width: 25px;\n        height: 25px;\n        fill:rgba(0, 0, 0, 0.5);\n        transition: fill 0.4s ease;\n    }\n    &:hover {\n        color: #fff;\n        svg {\n            fill: #fff;\n        }\n    }\n`;","import BackSvg from '../Svg/BackSvg/BackSvg';\n\nimport { StyledLink } from './BackLink.styled';\n\n\nexport const BackLink = ({ to, children, title }) => {\n\n  return (\n    <StyledLink to={to}>\n      {title}\n      <BackSvg />\n      {children}\n    </StyledLink>\n  );\n};","import { List, Item, Img, NameWrap, MovieTitle, MovieYear } from './MovieList.styled';\nimport { Link } from 'react-router-dom';\nimport { useRef } from 'react';\n\nimport { BackLink } from 'components/BackLink/BackLink';\n\nexport const MovieList = ({ movies, location }) => {\n    const backPath =  useRef(location.state?.from ?? '/');\n\n\n    return (\n        <>\n            <BackLink to={backPath.current} title={\"go home\"}></BackLink>            \n            <List>\n                {movies.map(({ id, title, release_date, poster_path }) => {\n                const year = release_date.split('-')[0];\n                    return (\n                        poster_path &&\n                        <Item key={id}>\n                            <Link to={`/movies/${id}`}  state={{ from: location }}>\n                                {poster_path ? <Img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"poster\" /> : <img src={'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'} alt=\"profile\" />}\n                                <NameWrap>\n                                    <MovieTitle>{title}</MovieTitle>\n                                    <MovieYear>{year}</MovieYear>\n                                </NameWrap>\n                            </Link>\n                        </Item>\n                    )\n                })}\n            </List>\n        </>\n    );\n  };","import styled from 'styled-components';\nexport const Container = styled.div`\n    max-width: 290px;\n    height: 363px;\n    border-radius: 23px;\n    padding: 10px 3px 2px;\n    background: rgba(255, 255, 255, 0.30);   \n    box-shadow: 1px 2px 10px 0px rgba(0,0,0,0.3);\n`;\n\nexport const MovieWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Heading = styled.h2`\n    margin: 0;\n    margin-bottom: 10px;\n\n    leading-trim: both;\n    color: #FAFAFA;\n    font-size: 13px;\n    font-style: normal;\n    font-weight: 600;\n    letter-spacing: -0.02em;\n    line-height: 1;\n\n    @media screen and (min-width: 768px) {\n        font-size: 15px;\n    }\n`;\n\nexport const List = styled.ul`\n    border-radius: 16px;\n    padding: 0px 5px;\n\n    height: 328px; \n    overflow-y: auto;\n    margin-right: 0;\n\n`;\n\nexport const LiItem = styled.li`\n    width: 260px;\n    height: 153px;\n    overflow-y: hidden;\n    border-radius:16px;\n    margin: 0;\n    background: url(${props => props.$backgroundUrl}) no-repeat;\n    background-size:cover;\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,0.4);\n    transition: box-shadow 0.4s ease;\n    &:not(:last-child) {\n        margin-bottom: 8px;\n    }\n\n    > a {\n        border-radius:16px;\n        text-transform: uppercase;\n        text-decoration: none;\n        color: #fff;\n        font-size: 14px;\n        font-weight: bold;\n        line-height: 2;\n        margin-top: 0;\n        \n    };\n`;\n\nexport const RounderWrap = styled.span`\n    display: flex;\n    gap:180px;\n`;\n\nexport const  LikeBtn = styled.button`\n\n    margin-top: 5px;\n    cursor: pointer;\n    padding: 0;\n    border: none;\n    opacity: 0.7;\n    background-color:  rgba(255, 255, 255, 0);\n    transition: opacity 0.9s ease;\n    svg {\n        fill: rgba(223, 221, 219, 0.7);\n        transition: fill 0.9s ease, opacity 0.9s ease;\n    }    svg {\n        width:13px;\n        height: 13px;\n        fill: rgb(255, 255, 255);\n        transition: fill 0.9s ease;\n    }\n\n    @media screen and (min-width: 768px) {\n        svg {\n            width: 22px;\n            height: 22px;\n        }\n    }\n\n    @media screen and (min-width: 1200px) {\n        svg {\n            width: 25px;\n            height: 25px;\n        }\n    }\n\n    &:hover {\n        opacity: 1;   \n        svg {\n            fill: rgba(255, 255, 255, 1);\n        }\n    }\n    &:focus {\n        opacity: 1;\n        svg {\n            fill: rgba(255, 255, 255, 1);\n        }\n    }\n`;\n\nexport const RounderNumber = styled.span`\n    font-size: 13px;\n    font-weight: bold;\n    color: white;\n    background-color: #CA7900;\n    display: flex;\n    justify-content: center;  \n    align-items: center;\n    width: 48px;\n    height: 30px;\n    border-radius:16px;\n`;\n\nexport const DisplayTitle = styled.span`\n    opacity:0;\n    transition: opacity 600ms ease;\n\n    font-size:14px;\n    line-height: 1.4;\n    background: rgba(0,0,0, 0.5);\n    backdrop-filter: blur(10px);\n    border-bottom-right-radius: 16px;\n    border-bottom-left-radius: 16px;\n    padding: 15px 15px 15px;\n    margin: 0;\n`;\n\nexport const MovieInfo = styled.span`\n    border-radius:16px;\n    display:flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 153px;\n    &:hover ${DisplayTitle} {\n        // transform: translateX(0);\n        opacity: 1;\n    }\n`;","import { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport { getPopularMovies } from 'components/services/api';\nimport { useAuth } from 'hooks/use-auth';\nimport { addToWatchlist } from 'components/services/watch-list';\n\nimport { Container,MovieWrapper, Heading, List, LiItem, MovieInfo, RounderWrap, LikeBtn, RounderNumber, DisplayTitle } from './PopularMovies.styled'\nimport LikeSvg from 'components/Svg/LikeSvg/LikeSvg';\n\nexport const PopularMovies = ({ location }) => {\n    const [items, setItems] = useState([]);\n    const {id, isAuth} = useAuth();\n    const navigate = useNavigate();\n \n    const handleClick = async (movieId, title, poster_path, overview) => {\n        if (!isAuth) return navigate(\"/login\");\n        addToWatchlist(id, movieId, title, poster_path, overview);\n      }\n    useEffect(() => {\n        const fetchPopularMovies = async () => {\n            try {\n                const result = await getPopularMovies();\n                // console.log(\"pop\",result)\n\n                setItems(result.results);\n            } catch(e) {\n                console.log(\"Sorry here error\");\n            }\n        }\n        fetchPopularMovies();\n    }, []);\n\n    return(\n        <Container>\n            <MovieWrapper>\n                <Heading>Most Watching</Heading>\n                <List>\n                    {items.map(({ title, name, backdrop_path, vote_average, id, poster_path, overview }) => {\n                        const roundedNumber = (Math.round(parseFloat(vote_average) * 10) / 10).toFixed(1);\n                        const displayTitle = title || name;\n                        // const linkUrl = `https://rezka.ag/search/?do=search&subaction=search&q=${displayTitle}`;\n                        return (\n                            <LiItem key={id} $backgroundUrl={`https://image.tmdb.org/t/p/w500${backdrop_path}`}>\n\n                                <Link to={`/movies/${id}`} state={{ from: location }}>\n                                    {/* <img src={`https://image.tmdb.org/t/p/w500${backdrop_path}`} alt=\"poster\" /> */}\n                                    <MovieInfo>\n                                        <RounderWrap>\n                                            <RounderNumber>{roundedNumber}</RounderNumber>\n                                            <LikeBtn onClick={() => handleClick(id, title||name, poster_path, overview)}><LikeSvg/></LikeBtn>\n                                        </RounderWrap>\n                                        <DisplayTitle>{displayTitle}</DisplayTitle>\n                                    </MovieInfo>\n                                </Link>\n                            </LiItem>\n                        );\n                    })}\n                </List>\n            </MovieWrapper>\n        </Container>\n    );\n};","import styled from 'styled-components';\nexport const Container = styled.div`\n    max-width: 290px;\n    height: 363px;\n    padding: 10px 3px 2px;\n    border-radius: 23px;\n    background: rgba(255, 255, 255, 0.30);   \n    box-shadow: 1px 2px 10px 0px rgba(0,0,0,0.3);\n\n`;\n\nexport const MovieWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Heading = styled.h2`\n    margin: 0;\n    margin-bottom: 10px;\n\n    leading-trim: both;\n    color: #FAFAFA;\n    font-size: 13px;\n    font-style: normal;\n    font-weight: 600;\n    letter-spacing: -0.02em;\n    line-height: 1;\n\n    @media screen and (min-width: 768px) {\n        font-size: 15px;\n    }\n`;\n\nexport const List = styled.ul`\n    // border-radius: 16px;\n    // padding: 5px 5px;\n    // height: 360px; \n    // overflow-y: auto;\n    // margin-right: 0;\n    border-radius: 16px;\n    padding: 0px 5px;\n\n    height: 328px; \n    overflow-y: auto;\n    margin-right: 0;\n`;\n\nexport const LiItem = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 260px;\n    height: 100px;\n    overflow-y: hidden;\n    border-radius:16px;\n    margin: 0;\n    box-shadow: 0px 2px 6px 0px rgba(0,0,0,0.4);\n    transition: box-shadow 0.4s ease;\n    &:not(:last-child) {\n        margin-bottom: 10px;\n    }\n\n    > a {\n\n        border-radius:16px;\n        text-transform: uppercase;\n        text-decoration: none;\n        color: #fff;\n        font-size: 14px;\n        font-weight: bold;\n        line-height: 2;\n        margin-top: 0;\n \n    };\n`;\n\nexport const ImgBox = styled.span`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n`;\n\nexport const Img = styled.img`\n    width: 70px;\n    height: 100px;\n    border-radius:16px;\n`;\n\n\nexport const DisplayTitle = styled.span`\n    color: white;\n    font-size: 13px;\n    line-height: 1.3;\n    font-weight: 700;\n    max-width: 150px;\n`;\n\nexport const Play = styled.span`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(239, 239, 240, 0.4);\n    box-shadow: 1px 2px 10px 0px rgba(0,0,0,0.3);\n    border-radius: 50%;\n    width: 35px;\n    height: 35px;\n    margin-right: 15px;\n    transition: background-color 0.7s ease;\n\n    svg {\n        width: 20px;\n        height: 20px;\n        fill: white;\n        transition: fill 0.7s ease;\n    }\n    &:hover {\n        background-color: rgba(255, 255, 255, 1);\n        svg {\n            fill: black;\n        }\n    }\n\n`;","import { Link } from 'react-router-dom';\n\nimport { PlaySvg } from '../../Svg/PlaySvg/PlaySvg';\n\nimport { Container,MovieWrapper, Heading, List, LiItem, DisplayTitle, ImgBox, Play, Img } from './RecentlyViewed.styled';\n\nexport const RecentlyViewed = ({ items,location }) => {\n\n    return(\n        <Container>\n            <MovieWrapper>\n                <Heading>Recently Viewed</Heading>\n                <List>\n                    {items.map(({ title, name, poster_path, id }) => {\n                        const displayTitle = title || name;\n                        return (\n                            <LiItem key={id}>\n                                    <ImgBox>\n                                        <Img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt=\"poster\" />\n                                        <DisplayTitle>{displayTitle}</DisplayTitle>\n                                    </ImgBox>\n                                <Link to={`/movies/${id}`} state={{ from: location }}>\n                                    <Play><PlaySvg/></Play>\n                                </Link>\n                            </LiItem>\n                        );\n                    })}\n                </List>\n            </MovieWrapper>\n        </Container>\n    );\n};","import styled from \"styled-components\";\n\nexport const SvgBox = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const Svg = styled.svg`\n`;\n","import { SvgBox, Svg } from './MoreSvg.styled';\n\n\nexport const MoreSvg = () => {\n\n    return (\n      <SvgBox>\n<Svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 24 24\">\n<title>read_more</title>\n<path d=\"M12.984 6.984h9v2.016h-9v-2.016zM12.984 15h9v2.016h-9v-2.016zM15.984 11.016h6v1.969h-6v-1.969zM12.984 12l-4.969-5.016v4.031h-6v1.969h6v4.031z\"></path>\n</Svg>\n\n\n      </SvgBox>\n    );\n  }\n  export default MoreSvg;","import styled from 'styled-components';\n\n\n\n\nexport const List = styled.ul`\n    .slider {\n        width: 292px;\n\n        @media screen and (min-width: 768px) {\n            width: 696px;\n        }\n    \n        @media screen and (min-width: 1200px) {\n            width: 830px;\n            height: 345px;\n        }\n    }\n    .slick-dots li button:before {\n        display: none;\n\n\n        @media screen and (min-width: 768px) {\n            display:block;\n            font-size: 4px; \n        }\n        @media screen and (min-width: 1200px) {\n            font-size: 6px; \n\n        }\n\n`;\n\nexport const LiItem = styled.li`\n    position: relative;\n    overflow: hidden;\n    min-width: 292px;\n    height:150px;\n    border-radius:16px;\n    margin: 0;\n    background: url(${props => props.$backgroundUrl}) no-repeat;\n    background-size:cover;\n\n    @media screen and (min-width: 768px) {\n        border-radius:23px;\n        min-width: 696px;\n        height: 345px;\n    }\n    @media screen and (min-width: 1200px) {\n        min-width: 830px;\n    }\n\n    a {\n        text-decoration: none;\n        margin-top: 0;\n    }\n\n\n`;\n\nexport const BtnWrap = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 5px;\n\n    @media screen and (min-width: 768px) {\n        gap: 10px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        gap: 15px;\n    }\n`;\n\nexport const InfoBtn = styled.button`\n    cursor: pointer;\n    opacity: 0.8;\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    color: rgb(255, 255, 255);\n    font-size: 7px;\n    font-weight: 600;\n    text-transform: uppercase;\n    padding: 4px 7px;\n    border: none;\n    border-radius: 10px;\n    background: rgba(250, 250, 250, 0.30);\n    box-shadow: 1px 2px 10px 0px rgba(0,0,0,0.3);\n    backdrop-filter: blur(20px);\n    transition: opacity 0.9s ease, background 0.9s ease, color 0.9s ease; \n\n    svg {\n        width:13px;\n        height: 13px;\n        fill: rgb(255, 255, 255);\n        transition: fill 0.9s ease;\n    }\n\n    @media screen and (min-width: 768px) {\n        font-size: 12px;\n        padding: 8px 11px;\n\n        svg {\n            width: 20px;\n            height: 20px;\n            fill: rgb(255, 255, 255);\n            transition: fill 0.9s ease;\n        }\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 13px;\n        padding: 9px 12px;\n\n        svg {\n            width: 22px;\n            height: 22px;\n            fill: rgb(255, 255, 255);\n            transition: fill 0.9s ease;\n        }\n    }\n\n    &:hover {\n        background: rgba(255, 255, 255);\n        opacity: 1;\n        color: #2E2E2E;\n        svg {\n            fill: #2E2E2E;\n        }\n    }\n`;\n\nexport const PlayBtn = styled.button`\n    cursor: pointer;\n    opacity: 0.8;\n    display: flex;\n    align-items: center;\n    gap: 3px;\n    color: rgb(255, 255, 255);\n    font-size: 7px;\n    font-weight: 600;\n    text-transform: uppercase;\n    padding: 4px 7px;\n    border: none;\n    border-radius: 10px;\n    background: rgba(250, 250, 250, 0.30);\n    box-shadow: 1px 2px 10px 0px rgba(0,0,0,0.3);\n    backdrop-filter: blur(20px);\n    transition: opacity 0.9s ease, background 0.9s ease, color 0.9s ease; \n\n    svg {\n        width:13px;\n        height: 13px;\n        fill: rgb(255, 255, 255);\n        transition: fill 0.9s ease;\n    }\n\n    @media screen and (min-width: 768px) {\n        font-size: 12px;\n        padding: 8px 11px;\n\n        svg {\n            width: 20px;\n            height: 20px;\n            fill: rgb(255, 255, 255);\n            transition: fill 0.9s ease;\n        }\n\n\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 13px;\n        padding: 9px 12px;\n\n        svg {\n            width: 22px;\n            height: 22px;\n            fill: rgb(255, 255, 255);\n            transition: fill 0.9s ease;\n        }\n    }\n\n    &:hover {\n        background: rgba(255, 255, 255);\n        opacity: 1;\n        color: #2E2E2E;\n        svg {\n            fill: #2E2E2E;\n        }\n    }\n`;\n\n\n// пробный вариант для добавления в избранное\nexport const LikeBtn = styled.button`\n    cursor: pointer;\n    padding: 0;\n    border: none;\n    opacity: 0.7;\n    background-color:  rgba(255, 255, 255, 0);\n    transition: opacity 0.9s ease;\n    svg {\n        fill: rgba(223, 221, 219, 0.7);\n        transition: fill 0.9s ease, opacity 0.9s ease;\n    }    svg {\n        width:13px;\n        height: 13px;\n        fill: rgb(255, 255, 255);\n        transition: fill 0.9s ease;\n    }\n\n    @media screen and (min-width: 768px) {\n        svg {\n            width: 22px;\n            height: 22px;\n        }\n    }\n\n    @media screen and (min-width: 1200px) {\n        svg {\n            width: 25px;\n            height: 25px;\n        }\n    }\n\n    &:hover {\n        opacity: 1;   \n        svg {\n            fill: rgba(255, 255, 255, 1);\n        }\n    }\n    &:focus {\n        opacity: 1;\n        svg {\n            fill: rgba(255, 255, 255, 1);\n        }\n    }\n`;\n//////////////////////////////////////////////\n\nexport const Number = styled.span`\n\n`;\n\nexport const BackgroundLayer = styled.span`\ncontent: \"\";\nposition: absolute;\ntop: 0;\nleft: 0;\nwidth: 50%;\nheight: 100%;\nbackground-color: rgba(40, 40, 40, 0.55);\nfilter: blur(35px);\nz-index: 1;\nborder-top-right-radius: 90%;\n`;\n\nexport const MovieInfo = styled.span`\n    position: relative;\n    z-index: 3;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height:150px;\n\n    @media screen and (min-width: 768px) {\n        height: 345px;\n    }\n\n    @media screen and (min-width: 1200px) {\n\n    }\n`;\n\nexport const InfoWrap = styled.span`\n    display:flex;\n    flex-direction: column;\n    gap: 5px;\n    padding: 0 0 8px 8px;\n    \n\n    @media screen and (min-width: 768px) {\n        gap: 10px;\n        padding: 0 0 16px 16px;\n    }\n`;\n\nexport const DisplayTitle = styled.span`\n    max-width: 100px;\n    color: #FAFAFA;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n    margin: 0;\n\n    @media screen and (min-width: 768px) {\n        max-width: 300px;\n        font-size: 20px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        max-width: 320px;\n        font-size: 24px;\n    }\n`;\n\n\nexport const MovieOverview = styled.span`\n    display: none;\n    color: #BCBCBC;\n    leading-trim: both;\n    font-size: 7px;\n    font-weight: 400;\n    max-width: 145px;\n    max-height: 40px;\n    overflow: auto;\n    @media screen and (min-width: 768px) {\n        max-height: 100%;\n        display: block;\n        max-width: 320px;\n        font-size: 12px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 13px;\n        max-width: 360px;\n    }\n`;\n\nexport const RounderNumber = styled.span`\n    font-size: 7px;\n    font-weight: bold;\n    color: white;\n    background-color: #CA7900;\n    display: flex;\n    justify-content: center;  \n    align-items: center;\n    width: 35px;\n    height: 20px;\n    border-radius: 16px;\n\n    @media screen and (min-width: 768px) {\n        font-size: 15px;\n        width: 65px;\n        height: 35px;\n    }\n`;\n\n\n// SLIDER 2\n\n","import { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Slider from \"react-slick\";\nimport 'slick-carousel/slick/slick.css'; \nimport 'slick-carousel/slick/slick-theme.css';\n\nimport { getUpcomingMovies } from 'components/services/api';\nimport { useAuth } from 'hooks/use-auth';\nimport { addToWatchlist } from 'components/services/watch-list';\n\nimport { TrailerModal } from '../../Modal/TrailerModal/TrailerModal';\nimport MoreSvg from '../../Svg/MoreSvg/MoreSvg';\nimport PlaySvg from '../../Svg/PlaySvg/PlaySvg';\nimport LikeSvg from '../../Svg/LikeSvg/LikeSvg'\nimport { List, LiItem, MovieInfo, InfoBtn,PlayBtn, RounderNumber, DisplayTitle, BtnWrap, LikeBtn, MovieOverview, Number, InfoWrap,BackgroundLayer, } from './UpcomingMovies.styled';\n\nexport const UpcomingMovies = ({ location }) => {\n  const [items, setItems] = useState([]);\n  const [selectedMovieId, setSelectedMovieId] = useState(null);\n  const [isTrailerOpen, setIsTraileOpen] = useState(false);\n  const {id, isAuth} = useAuth();\n  const navigate = useNavigate();\n\n\n  const openTrailer = (movieId) => {\n    setSelectedMovieId(movieId);\n    setIsTraileOpen(true);\n  };\n  \n  const closeTrailer = () => {\n    setIsTraileOpen(false);\n  };\n\n  const handleClick = async (movieId, title, poster_path, overview) => {\n    if (!isAuth) return navigate(\"/login\");\n    addToWatchlist(id, movieId, title, poster_path, overview);\n  }\n\n\n  useEffect(() => {\n      const fetchUpcomingMovies = async () => {\n          try {\n              const result = await getUpcomingMovies();\n              setItems(result.results);\n          } catch(e) {\n              console.log(\"Sorry here error\");\n          }\n      }\n      fetchUpcomingMovies();\n  }, []);\n\n  const sliderSettings = {\n    className: \"slider\",\n    arrows: false,\n    dots: true,\n    autoplay: true,\n    autoplaySpeed: 8000,\n    speed: 2180,\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    adaptiveHeight: true,\n    variableWidth: true,\n    style: {\n\n    },\n  };\n\n  return (\n    <>\n      <List>\n        <Slider \n          {...sliderSettings}\n        >\n          {items.map(({ title, name, backdrop_path, vote_average, id, overview, poster_path }) => {\n            const roundedNumber = (Math.round(parseFloat(vote_average) * 10) / 10).toFixed(1);\n            const displayTitle = title || name;\n            return (\n              <LiItem key={id} $backgroundUrl={`https://image.tmdb.org/t/p/original${backdrop_path}`}>\n                <BackgroundLayer>\n                </BackgroundLayer>\n                <MovieInfo>\n                  <Number>\n                    <RounderNumber>{roundedNumber}</RounderNumber>\n                  </Number>\n                  <InfoWrap>\n                    <DisplayTitle>{displayTitle}</DisplayTitle>\n                    <MovieOverview>{overview}</MovieOverview>\n                    <BtnWrap>\n                      <PlayBtn onClick={()=>openTrailer(id)}><PlaySvg/>Play trailer</PlayBtn>\n                      <Link to={`/movies/${id}`} state={{ from: location }}>\n                        <InfoBtn><MoreSvg/>More info</InfoBtn>\n                      </Link>\n                      <LikeBtn onClick={() => handleClick(id, title||name, poster_path, overview)}><LikeSvg/></LikeBtn>\n                    </BtnWrap>\n                  </InfoWrap>\n                </MovieInfo>          \n              </LiItem>\n            );\n          })}\n        </Slider>\n      </List>\n      {isTrailerOpen && selectedMovieId && (\n        <TrailerModal onClose={closeTrailer} isTrailerOpen={isTrailerOpen} MovieId={selectedMovieId} />\n      )}               \n      \n      </>         \n  );\n};","import styled from \"styled-components\";\n\nexport const SvgBox = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nexport const Svg = styled.svg`\n`;","import { SvgBox, Svg } from './ComeSvg.styled';\n\n\nexport const ComeSvg = () => {\n    return (\n      <SvgBox>\n<Svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n<title>Come</title>\n<path d=\"M4 12c-1.105 0-2-0.895-2-2s0.895-2 2-2v0c1.105 0 2 0.895 2 2s-0.895 2-2 2v0zM10 12c-1.105 0-2-0.895-2-2s0.895-2 2-2v0c1.105 0 2 0.895 2 2s-0.895 2-2 2v0zM16 12c-1.105 0-2-0.895-2-2s0.895-2 2-2v0c1.105 0 2 0.895 2 2s-0.895 2-2 2v0z\"></path>\n</Svg>\n      </SvgBox>\n    );\n  }\n  export default ComeSvg;","import styled from 'styled-components';\n\nexport const Heading = styled.h2`\n    leading-trim: both;\n    color: #FAFAFA;\n    font-size: 13px;\n    font-style: normal;\n    font-weight: 600;\n    letter-spacing: -0.02em;\n    line-height: 1;\n\n    @media screen and (min-width: 768px) {\n        font-size: 15px;\n    }\n`;\n\nexport const List = styled.ul`\n\n    .slider {\n        width: 290px;\n        height: 125px;\n\n        @media screen and (min-width: 768px) {\n            width: 696px;\n            height: 320px;\n        }\n\n        @media screen and (min-width: 1200px) {\n            width: 830px;\n            height: 345px;\n        }\n    }\n`;\n\nexport const LiItem = styled.li`\n    max-width: 84px;\n    height: 125px;\n    border-radius: 16px;\n    background: url(${props => props.$backgroundUrl}) no-repeat;\n    background-size:cover;\n\n    @media screen and (min-width: 768px) {\n        border-radius: 25px;\n        max-width: 220px;\n        height: 320px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        max-width: 262px;\n        height: 345px;\n    }\n    \n    a {\n        text-decoration: none;\n        margin-top: 0;\n        color: #fff;\n        font-weight: 600;\n        font-size: 14px;\n    };\n    \n`;\n\n\n\nexport const RounderNumber = styled.span`\n    display: flex;\n    justify-content: center;  \n    align-items: center;\n    font-size: 7px;\n    font-weight: bold;\n    width: 30px;\n    height: 18px;\n    color: white;\n    background-color: #CA7900;\n    border-radius: 16px;\n\n    @media screen and (min-width: 768px) {\n        font-size: 14px;\n        width: 58px;\n        height: 30px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 17px;\n        width: 68px;\n        height: 36px;\n    }\n`;\n\nexport const LikeBtn = styled.button`\n    // margin-top: 9px;\n    cursor: pointer;\n    padding: 0;\n    border: none;\n    opacity: 0.7;\n    background-color:  rgba(255, 255, 255, 0);\n    transition: opacity 0.9s ease;\n    svg {\n        fill: rgba(223, 221, 219, 0.7);\n        transition: fill 0.9s ease, opacity 0.9s ease;\n    }    svg {\n        width:13px;\n        height: 13px;\n        fill: rgb(255, 255, 255);\n        transition: fill 0.9s ease;\n    }\n\n    @media screen and (min-width: 768px) {\n        svg {\n            width: 22px;\n            height: 22px;\n        }\n    }\n\n    @media screen and (min-width: 1200px) {\n        svg {\n            width: 25px;\n            height: 25px;\n        }\n    }\n\n    &:hover {\n        opacity: 1;   \n        svg {\n            fill: rgba(255, 255, 255, 1);\n        }\n    }\n    &:focus {\n        opacity: 1;\n        svg {\n            fill: rgba(255, 255, 255, 1);\n        }\n    }\n`;\nexport const RounderWrap = styled.span`\n    border-top-right-radius: 25px;\n    border-top-left-radius: 16px;\n    border-bottom-left-radius: 16px;\n\n    background: rgba(0, 0, 0, 0.3);\n    backdrop-filter: blur(2px);\n    display: flex;\n    gap: 30px;\n\n    @media screen and (min-width: 768px) {\n        gap:122px;\n\n    }\n\n    @media screen and (min-width: 1200px) {\n        gap:153px;\n\n    }\n`;\n\nexport const DisplayTitle = styled.span`\n    opacity:1;\n    font-size: 8px;\n\n    transition: opacity 600ms ease;\n    font-weight: 700;\n\n    @media screen and (min-width: 768px) {\n        font-size: 16px;\n        line-height: 1.2;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 18px;\n        line-height: 1.4;\n    }\n`;\n\nexport const Overview = styled.span`\n    display: none;\n\n    @media screen and (min-width: 768px) {\n        display:block;\n        opacity: 0.8;\n        font-size: 12px;\n        font-weight: 400;\n        max-width: 160px;\n        height: 90px;\n        overflow-y: auto;\n    }\n\n    @media screen and (min-width: 1200px) {\n        max-width: 190px;\n    }\n`;\n\nexport const MovieInfo = styled.span`\n    opacity: 0;\n    display: flex;  \n    flex-direction: column;\n    gap:7px;\n\n\n    backdrop-filter: blur(20px);\n    border-bottom-right-radius: 16px;\n    border-bottom-left-radius: 16px;\n    padding: 5px 5px 5px;\n    margin: 0;\n    transition: opacity 0.7s ease;\n\n    @media screen and (min-width: 768px) {\n        gap: 0px;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        border-bottom-right-radius: 25px;\n        border-bottom-left-radius: 25px;\n        padding: 10px 10px 10px;\n        min-height: 160px;\n    }\n\n    @media screen and (min-width: 1200px) {\n    }\n`;\n\nexport const LinkWrap = styled.span`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 125px;\n\n    @media screen and (min-width: 768px) {\n        height: 320px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        height: 345px;\n    }\n\n    &:hover ${MovieInfo} {\n        opacity: 1;\n    }\n`;\n\n\nexport const TitleWrap = styled.span`\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n\n`;\n\nexport const BtnWrap = styled.span`\n    display: flex;\n    justify-content: center;\n    gap:10px;\n\n    @media screen and (min-width: 768px) {\n        flex-direction: column;\n        gap: 10px;\n    }\n`;\n\nexport const Btn = styled.button`\n    cursor: pointer;\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(255, 255, 255, 0.3);\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    transition:background-color 0.7s ease ;\n    box-shadow: 1px 2px 10px 0px rgba(0,0,0,0.3);\n\n    svg {\n        width: 12px;\n        height: 12px;\n        fill: white;\n        transition: fill 0.7s ease;\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 35px;\n        height: 35px;\n        svg {\n            width: 20px;\n            height: 20px;\n        }\n    }\n    &:hover {\n        background-color: #fff;\n\n        svg {\n            fill: black;\n        }\n    }\n`;\n","import Slider from \"react-slick\";\nimport { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport 'slick-carousel/slick/slick.css'; \nimport 'slick-carousel/slick/slick-theme.css';\n\nimport { getTrandingMovies } from \"components/services/api\";\nimport { useAuth } from 'hooks/use-auth';\nimport { addToWatchlist } from 'components/services/watch-list';\n\n\nimport PlaySvg from '../../Svg/PlaySvg/PlaySvg';\nimport ComeSvg from '../../Svg/ComeSvg/ComeSvg';\nimport {TrailerModal} from '../../Modal/TrailerModal/TrailerModal';\n\nimport { List, LiItem, Heading, LinkWrap, MovieInfo, RounderNumber, RounderWrap, DisplayTitle, Overview, TitleWrap, LikeBtn, Btn, BtnWrap} from './NowTranding.styled';\nimport LikeSvg from \"components/Svg/LikeSvg/LikeSvg\";\n\nexport const NowTranding = ({ location}) => {\n    const [items, setItems] = useState([]);\n    const [selectedMovieId, setSelectedMovieId] = useState(null);\n    const [isTrailerOpen, setIsTraileOpen] = useState(false);\n    const {id, isAuth} = useAuth();\n    const navigate = useNavigate();\n    \n    const handleClick = async (movieId, title, poster_path, overview) => {\n        if (!isAuth) return navigate(\"/login\");\n        addToWatchlist(id, movieId, title, poster_path, overview);\n    }\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                const result = await getTrandingMovies();\n                // console.log(\"now\",result)\n\n                setItems(result.results);\n            } catch(e) {\n                console.log(\"Sorry here error\");\n            }\n        }\n        fetchMovies();\n    }, []);\n\n    const openTrailer = (movieId) => {\n        setSelectedMovieId(movieId);\n        setIsTraileOpen(true);\n      };\n      \n      const closeTrailer = () => {\n        setIsTraileOpen(false);\n      };\n      \n\n    const sliderSettings = {\n        className: \"slider\",\n        autoplay: true,\n        autoplaySpeed: 8000,\n        arrows: false,\n        dots: false,\n        infinite: true,\n        speed: 2000,\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        swipeToSlide: true,\n        focusOnSelect: true,\n        centerMode: true,\n        centerPadding: -9,\n        style: {\n        },\n    };\n\n    return (\n        <>\n        <List>\n            <Heading>Now Trending</Heading>\n            <Slider\n                {...sliderSettings}\n            >\n            {items.map(({ title, name, poster_path, vote_average, overview, id }) => {\n                const roundedNumber = (Math.round(parseFloat(vote_average) * 10) / 10).toFixed(1);\n                const displayTitle = title || name;\n                return (\n                    <LiItem key={id} $backgroundUrl={`https://image.tmdb.org/t/p/original${poster_path}`}>\n                        <LinkWrap>\n                            <RounderWrap>\n                                <RounderNumber>{roundedNumber}</RounderNumber>\n                                <LikeBtn onClick={() => handleClick(id, title||name, poster_path, overview)}><LikeSvg/></LikeBtn>\n                            </RounderWrap>\n                                    <MovieInfo>\n                                        <TitleWrap>\n                                            <DisplayTitle>{displayTitle}</DisplayTitle>\n                                            <Overview>{overview}</Overview>\n                                        </TitleWrap>\n                                        <BtnWrap>\n                                            <Btn onClick={()=>openTrailer(id)}><PlaySvg/></Btn>\n                                            <Link to={`/movies/${id}`} state={{ from: location }}>\n                                                <Btn><ComeSvg/></Btn>\n                                            </Link>\n                                        </BtnWrap>\n                                    </MovieInfo>\n                        </LinkWrap>\n                    </LiItem>\n                );\n            })}\n            </Slider>\n      </List>\n       {isTrailerOpen && selectedMovieId && (\n        <TrailerModal onClose={closeTrailer} isTrailerOpen={isTrailerOpen} MovieId={selectedMovieId} />\n      )}\n     </>\n    );\n};","import styled from 'styled-components';\n\nexport const HomeBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;    \n    align-items: center;\n    justify-content: space-evenly;\n    gap:20px;\n\n\n    & > :nth-child(1) {\n        order: 3; /* Змінюємо порядок першого дочірнього елемента на 2 */\n    }\n\n    & > :nth-child(2) {\n        order: 1; /* Змінюємо порядок другого дочірнього елемента на 1 */\n    }\n    & > :nth-child(3) {\n        order: 4; /* Змінюємо порядок першого дочірнього елемента на 2 */\n    }\n\n    & > :nth-child(4) {\n        order: 2; /* Змінюємо порядок другого дочірнього елемента на 1 */\n    }\n\n    @media screen and (min-width: 768px) {\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;    \n        align-items: center;\n        row-gap: 35px;\n        justify-content: space-evenly;\n\n        & > :nth-child(1) {\n            order: 3; /* Змінюємо порядок першого дочірнього елемента на 2 */\n        }\n    \n        & > :nth-child(2) {\n            order: 1; /* Змінюємо порядок другого дочірнього елемента на 1 */\n        }\n        & > :nth-child(3) {\n            order: 4; /* Змінюємо порядок першого дочірнього елемента на 2 */\n        }\n    \n        & > :nth-child(4) {\n            order: 2; /* Змінюємо порядок другого дочірнього елемента на 1 */\n        }\n    }\n\n    @media screen and (min-width: 1200px) {\n        justify-content: space-between;\n\n        & > :nth-child(1) {\n            order: 1; /* Змінюємо порядок першого дочірнього елемента на 2 */\n        }\n    \n        & > :nth-child(2) {\n            order: 2; /* Змінюємо порядок другого дочірнього елемента на 1 */\n        }\n        & > :nth-child(3) {\n            order: 3; /* Змінюємо порядок першого дочірнього елемента на 2 */\n        }\n    \n        & > :nth-child(4) {\n            order: 4; /* Змінюємо порядок другого дочірнього елемента на 1 */\n        }\n    }\n`;\n\nexport const Container = styled.div`\n    // display: flex;\n    // justify-content: space-between;\n    // &:first-child {\n    //     margin-bottom: 20px;\n    // }\n\n    // @media screen and (min-width: 768px) {\n    //     flex-direction: column-reverse;\n    // }\n\n    // @media screen and (min-width: 1200px) {\n    //     flex-direction: row;\n\n    // }\n`;\n\n    // @media screen and (min-width: 768px) {\n    // }\n\n    // @media screen and (min-width: 1200px) {\n\n    // }","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getTrandingMovies, getMoviesByGenres, getMoviesByName } from '../../services/api';\nimport { MovieList } from 'components/MovieList/MovieList';\n// import { Section } from '../../Sections/Section'\n\nimport { PopularMovies } from '../../HomeComponents/PopularMovies/PopularMovies';\nimport { RecentlyViewed } from '../../HomeComponents/RecentlyViewed/RecentlyViewed';\nimport  { UpcomingMovies } from '../../HomeComponents/UpcomingMovies/UpcomingMovies';\nimport { NowTranding } from '../../HomeComponents/NowTranding/NowTranding';\n// import { GenresModal } from '../../GenresModal/GenresModal';\n\nimport { HomeBox,Container } from './Home.styled';\n\n\n\nconst Home = () => {\n    const [searchParams] = useSearchParams();\n    const [items, setItems] = useState([]);\n    const [movies, setMovies] = useState([]);\n\n    \n    const searchGenre = searchParams.get(\"genreId\")\n    const searchQuery = searchParams.get(\"query\") ?? \"\";\n    const location = useLocation();\n\n    useEffect(() => {\n\n        const fetchMovies = async () => {\n            try {\n                const { results } = await getTrandingMovies();\n                setItems(results);\n            }   catch(e) {\n                    console.log(\"Sorry here error\");\n                }\n        }\n\n        const fetchByGenres = async () => {\n            try {\n                const { results } = await getMoviesByGenres(searchGenre);\n                setMovies(results);       \n            }   catch(e) {\n                    console.log(\"Sorry here error\");\n                }\n        }\n\n        const findMovie = async () => {\n            try {\n                const { results } = await getMoviesByName(searchQuery);\n                setMovies(results);\n            }   catch(e) {\n                    console.log(\"Sorry here error\");\n                }\n        }\n\n        fetchMovies();\n        if (searchGenre) {\n            fetchByGenres();\n        } else if (searchQuery) {\n            findMovie();\n        }\n    }, [searchGenre, searchQuery]);\n\n\n\n    return(\n        <>\n            {(searchQuery || searchGenre) ?\n                <MovieList\n                    movies={movies}\n                    location={location}\n                />\n            :   \n                <HomeBox> \n                    <Container>\n                    <PopularMovies\n                            location={location}\n                        /> \n                    </Container>\n                    <Container>\n                        <UpcomingMovies\n                            location={location}\n                        />\n                    </Container>\n                    <Container>\n                        <RecentlyViewed\n                            items={items}\n                            location={location}\n                        />\n                    </Container>\n                    <Container>\n                        <NowTranding\n                            location={location}\n                        />\n                    </Container>\n                </HomeBox>\n            }\n        </>\n    );\n};\n\nexport default Home;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Item","_templateObject3","Img","_templateObject4","NameWrap","_templateObject5","MovieTitle","_templateObject6","MovieYear","_templateObject7","Svg","_jsxs","version","xmlns","width","height","viewBox","children","_jsx","d","StyledLink","Link","BackLink","_ref","to","title","BackSvg","MovieList","_location$state$from","_location$state","movies","location","backPath","useRef","state","from","_Fragment","current","map","_ref2","id","release_date","poster_path","year","split","concat","src","alt","Container","MovieWrapper","Heading","LiItem","props","$backgroundUrl","RounderWrap","LikeBtn","RounderNumber","_templateObject8","DisplayTitle","_templateObject9","MovieInfo","_templateObject10","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","PopularMovies","_useState","useState","_useState2","_slicedToArray","items","setItems","_useAuth","useAuth","isAuth","navigate","useNavigate","handleClick","_asyncToGenerator","_callee","movieId","overview","_context","addToWatchlist","_x","_x2","_x3","_x4","apply","arguments","useEffect","fetchPopularMovies","_ref3","_callee2","_context2","getPopularMovies","results","t0","console","log","_ref4","backdrop_path","vote_average","roundedNumber","Math","round","parseFloat","toFixed","displayTitle","onClick","LikeSvg","ImgBox","Play","RecentlyViewed","PlaySvg","SvgBox","BtnWrap","InfoBtn","PlayBtn","Number","BackgroundLayer","InfoWrap","_templateObject11","MovieOverview","_templateObject12","_templateObject13","UpcomingMovies","_useState3","_useState4","selectedMovieId","setSelectedMovieId","_useState5","_useState6","isTrailerOpen","setIsTraileOpen","fetchUpcomingMovies","getUpcomingMovies","Slider","_objectSpread","className","arrows","dots","autoplay","autoplaySpeed","speed","infinite","slidesToShow","slidesToScroll","adaptiveHeight","variableWidth","style","MoreSvg","TrailerModal","onClose","MovieId","Overview","LinkWrap","TitleWrap","Btn","NowTranding","fetchMovies","getTrandingMovies","swipeToSlide","focusOnSelect","centerMode","centerPadding","ComeSvg","HomeBox","_searchParams$get","_useSearchParams","useSearchParams","searchParams","setMovies","searchGenre","get","searchQuery","useLocation","_yield$getTrandingMov","fetchByGenres","_yield$getMoviesByGen","getMoviesByGenres","findMovie","_callee3","_yield$getMoviesByNam","_context3","getMoviesByName"],"sourceRoot":""}