{"version":3,"file":"static/js/347.b729b9ee.chunk.js","mappings":"4NAGaA,EAAOC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gSAgCjBC,GAjBQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sHASTF,EAAAA,GAAAA,MAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2FAQfF,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gIAQpBK,EAASP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wN,SCvCtBO,EAAS,SAAHC,GAA8B,IAAzBC,EAAKD,EAALC,MAAOC,EAAWF,EAAXE,YAC3BC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAGpB,OACIG,EAAAA,EAAAA,MAACxB,EAAI,CAAAyB,SAAA,EACDC,EAAAA,EAAAA,KAAA,MAAAD,SAAKb,KACLc,EAAAA,EAAAA,KAACtB,EAAK,CACFuB,KAAK,QACLC,MAAOV,EACPW,SAAU,SAACC,GAAC,OAAKX,EAASW,EAAEC,OAAOH,MAAM,EACzCI,YAAY,WAEhBN,EAAAA,EAAAA,KAACtB,EAAK,CACFuB,KAAK,WACLC,MAAON,EACPO,SAAU,SAACC,GAAC,OAAKP,EAAQO,EAAEC,OAAOH,MAAM,EACxCI,YAAY,cAEhBN,EAAAA,EAAAA,KAAClB,EAAM,CAACyB,QAAS,kBAAMpB,EAAYK,EAAOI,EAAK,EAACG,SAC3Cb,MAIjB,C,wJC1BasB,E,QAAUjC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4D,SCOpBgC,EAAU,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAkBjB,OACIb,EAAAA,EAAAA,KAACQ,EAAO,CAAAT,UACJC,EAAAA,EAAAA,KAAChB,EAAAA,EAAM,CACHG,YAnBQ,SAACK,EAAOsB,GACxB,IAAMC,GAAOC,EAAAA,EAAAA,OACbC,EAAAA,EAAAA,IAA2BF,EAAMvB,EAAOsB,GACvCI,MAAK,SAAAjC,GAAa,IAAXkC,EAAIlC,EAAJkC,KACJT,GAASU,EAAAA,EAAAA,IAAQ,CACb5B,MAAO2B,EAAK3B,MACZ6B,GAAIF,EAAKG,IACTC,MAAOJ,EAAKK,gBAEhBZ,EAAS,KACTa,IAAAA,OAAAA,QAAwB,sBAC5B,IACCC,OAAM,SAACC,GAAK,OAAKF,IAAAA,OAAAA,QAAwB,GAADG,OAAID,EAAME,SAAU,GACjE,EAOY3C,MAAM,WAKtB,E,UCxBA,EAXc,WACV,OACIY,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACS,EAAO,KACRX,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,OACIC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAG,YAAWhC,SAAC,kBAIxC,C","sources":["components/AuthFC/FormFC/FormFC.styled.jsx","components/AuthFC/FormFC/FormFC.jsx","components/AuthFC/LoginFC/LoginFC.styled.jsx","components/AuthFC/LoginFC/LoginFC.jsx","components/pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Form = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 292px;\n    \n    @media screen and (min-width: 768px) and (max-width: 1199px) {\n        width: 400px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: 400px;\n\n        // width: 1188px;\n    }\n`\nexport const Label = styled.label`\n    display: flex;\n    gap: 10px;\n    font-size: 14px;\n    margin-bottom: 25px;\n    cursor: pointer;\n\n`\n\nexport const CheckBox = styled.input`\nwidth: 15px;\nheight: 15px;\nborder: 2px solid #000; \nbackground-color: #fff; \n`\n\n\nexport const Input = styled.input`\n    font-size: 15px;\n    border: none;\n    border-radius: 5px;\n    padding: 10px 15px;\n    margin-bottom: 15px;\n`\n\nexport const Button = styled.button`\n    max-width: 90px;\n    padding: 12px 15px;\n    border-radius: 10px;\n    border: none;\n    background: rgba(255, 255, 255, 0.4);\n\n    &:hover {\n        background: rgba(255, 255, 255, 0.7);\n    }\n`","import { useState } from \"react\";\n\nimport { Button, Form, Input } from './FormFC.styled';\n\nexport const FormFC = ({title, handleClick}) => {\n    const [email, setEmail] = useState('');\n    const [pass, setPass] = useState('');\n\n\n    return (\n        <Form>\n            <h1>{title}</h1>\n            <Input \n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"email\"\n            />\n            <Input \n                type=\"password\"\n                value={pass}\n                onChange={(e) => setPass(e.target.value)}\n                placeholder=\"password\"\n            />\n            <Button onClick={() => handleClick(email, pass)}>\n                {title}\n            </Button>\n        </Form>\n    )\n}\n\n","import styled from 'styled-components';\n\n\nexport const FormBox = styled.div`\n    display: flex;    \n    align-items: center;\n`\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, signInWithEmailAndPassword} from 'firebase/auth';\nimport Notiflix from 'notiflix';\n\nimport {setUser} from '../../../store/slices/userSlice'\n\nimport {FormFC} from '../FormFC/FormFC';\nimport { FormBox } from './LoginFC.styled';\n\nexport const LoginFC = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate();\n\n    const handleLogin = (email, password) => {\n        const auth = getAuth();\n        signInWithEmailAndPassword(auth, email, password)\n        .then(({user}) => {\n            dispatch(setUser({\n                email: user.email,\n                id: user.uid,\n                token: user.refreshToken,\n            }));\n            navigate('/');\n            Notiflix.Notify.success('Successfuly logined');\n        })\n        .catch((error) => Notiflix.Notify.warning(`${error.massege}`))\n    };\n\n\n    return (\n        <FormBox>\n            <FormFC\n                handleClick={handleLogin}\n                title=\"login\"\n            />\n        </FormBox>\n\n    )\n}\n\n","import {LoginFC} from '../../AuthFC/LoginFC/LoginFC';\nimport { Link } from 'react-router-dom';\n\n\nconst Login = () => {\n    return (\n        <div>\n            <LoginFC/>\n            <p>\n                Or <Link to=\"/register\">register</Link>\n            </p>\n        </div>\n    )\n}\n\nexport default Login;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","_templateObject3","_templateObject4","Button","_templateObject5","FormFC","_ref","title","handleClick","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","pass","setPass","_jsxs","children","_jsx","type","value","onChange","e","target","placeholder","onClick","FormBox","LoginFC","dispatch","useDispatch","navigate","useNavigate","password","auth","getAuth","signInWithEmailAndPassword","then","user","setUser","id","uid","token","refreshToken","Notiflix","catch","error","concat","massege","Link","to"],"sourceRoot":""}